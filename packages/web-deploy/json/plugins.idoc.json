{
    "$schema": "../../../docs/schema/idoc_v1.json",
    "title": "Plugin Syntax Guide - JSON vs YAML",

    "variables": [
        {
            "variableId": "selectedFormat",
            "type": "string",
            "initialValue": "json"
        },
        {
            "variableId": "userInput",
            "type": "string",
            "initialValue": "Hello from textbox!"
        },
        {
            "variableId": "sliderValue",
            "type": "number",
            "initialValue": 50
        },
        {
            "variableId": "isChecked",
            "type": "boolean",
            "initialValue": true
        }
    ],
    "dataLoaders": [
        {
            "dataSourceName": "exampleData",
            "type": "inline",
            "format": "json",
            "content": [
                {"category": "A", "value": 28},
                {"category": "B", "value": 55},
                {"category": "C", "value": 43},
                {"category": "D", "value": 91}
            ]
        }
    ],
    "groups": [
        {
            "groupId": "header",
            "elements": [
                "# Plugin Syntax Guide",
                "## Understanding Triple Backticks in Chartifact",
                "",
                "In Chartifact, **triple backticks** (```) define plugin instances that add interactivity and functionality to your documents. You can choose between **JSON** and **YAML** formats interchangeably.",
                "",
                "**Key Point**: The syntax is ` ```[format] [plugin-type] ` where format can be either `json` or `yaml`",
                "",
                "## When to Use JSON vs YAML",
                "",
                "**System Recommendation:**",
                "- **Use YAML mostly** - for cleaner, more readable configuration",
                "- **Use JSON for complex plugins** - especially when copying configuration from programmatic libraries like Vega and Tabulator, where most examples will be in JSON format"
            ]
        },
        {
            "groupId": "format-selector",
            "elements": [
                "## Choose Your Preferred Format",
                "",
                {
                    "type": "dropdown",
                    "variableId": "selectedFormat",
                    "label": "Select format to see examples in:",
                    "options": ["json", "yaml"]
                }
            ]
        },
        {
            "groupId": "syntax-overview",
            "elements": [
                "## Basic Syntax",
                "",
                "Plugin instances are created using fenced code blocks with a specific format:",
                "",
                "### JSON Format",
                "```",
                "```json plugin-type",
                "{",
                "  \"property\": \"value\",",
                "  \"anotherProperty\": 123",
                "}",
                "```",
                "```",
                "",
                "### YAML Format",
                "```",
                "```yaml plugin-type",
                "property: value",
                "anotherProperty: 123",
                "```",
                "```"
            ]
        },
        {
            "groupId": "input-examples",
            "elements": [
                "## Input Plugins",
                "",
                "### Textbox Plugin",
                "Create text input fields for user interaction.",
                "",
                "**Live Example**: Try typing in the textbox below!",
                "",
                {
                    "type": "textbox",
                    "variableId": "userInput",
                    "label": "Enter some text:",
                    "placeholder": "Type something here..."
                },
                "",
                "**You typed**: {{userInput}}",
                "",
                "### Slider Plugin",
                "Create numeric sliders for value selection.",
                "",
                {
                    "type": "slider",
                    "variableId": "sliderValue",
                    "label": "Adjust the value:",
                    "min": 0,
                    "max": 100,
                    "step": 1
                },
                "",
                "**Current value**: {{sliderValue}}",
                "",
                "### Checkbox Plugin",
                "Create boolean checkboxes for true/false selections.",
                "",
                {
                    "type": "checkbox",
                    "variableId": "isChecked",
                    "label": "Check this box"
                },
                "",
                "**Checkbox is**: {{isChecked}}"
            ]
        },
        {
            "groupId": "chart-example",
            "elements": [
                "## Chart Plugins",
                "",
                "### Vega-Lite Chart",
                "Create interactive data visualizations.",
                "",
                "**Live Example**: This chart is rendered from the plugin below",
                "",
                {
                    "type": "chart",
                    "chartKey": "barChart"
                },
                "",
                "**Recommendation**: Use JSON format for charts when copying from Vega-Lite examples, as most documentation uses JSON."
            ]
        },
        {
            "groupId": "table-example",
            "elements": [
                "## Table Plugins",
                "",
                "### Tabulator Plugin",
                "Create interactive data tables.",
                "",
                "**Live Example**: Interactive table with our sample data",
                "",
                {
                    "type": "tabulator",
                    "dataSourceName": "exampleData",
                    "tabulatorOptions": {
                        "autoColumns": true,
                        "layout": "fitColumns",
                        "maxHeight": "200px"
                    }
                },
                "",
                "**Recommendation**: Use JSON format for Tabulator configuration when copying from Tabulator documentation examples."
            ]
        },
        {
            "groupId": "format-comparison",
            "elements": [
                "## Format Comparison",
                "",
                "Here's how the same textbox plugin looks in both formats:",
                "",
                "### JSON Format (Copy from libraries)",
                "```",
                "```json textbox",
                "{",
                "  \"variableId\": \"myVariable\",",
                "  \"label\": \"Enter text:\",",
                "  \"placeholder\": \"Type here...\"",
                "}",
                "```",
                "```",
                "",
                "### YAML Format (Recommended for most cases)",
                "```",
                "```yaml textbox",
                "variableId: myVariable",
                "label: \"Enter text:\"",
                "placeholder: \"Type here...\"",
                "```",
                "```"
            ]
        },
        {
            "groupId": "available-plugins",
            "elements": [
                "## Available Plugin Types",
                "",
                "You can use triple backticks with these plugin types:",
                "",
                "### Input Plugins",
                "- `textbox` - Text input fields",
                "- `slider` - Numeric sliders",
                "- `dropdown` - Selection dropdowns", 
                "- `checkbox` - Boolean checkboxes",
                "",
                "### Visualization Plugins",
                "- `vega` - Full Vega specifications",
                "- `vega-lite` - Vega-Lite chart specifications",
                "- `chart` - Referenced charts from resources",
                "",
                "### Data Plugins",
                "- `tabulator` - Interactive data tables",
                "",
                "### Other Plugins",
                "- `mermaid` - Diagram generation",
                "- And more..."
            ]
        },
        {
            "groupId": "tips",
            "elements": [
                "## Best Practices for Plugin Usage",
                "",
                "1. **Default to YAML**: Use YAML format for most plugins - it's cleaner and more readable",
                "",
                "2. **Use JSON when copying**: When working with complex configurations from libraries like Vega or Tabulator, use JSON format since their documentation examples are typically in JSON",
                "",
                "3. **Variable binding**: Use `variableId` to bind plugins to document variables for reactivity",
                "",
                "4. **Data integration**: Use `dataSourceName` to connect plugins with your document's data sources",
                "",
                "5. **Schema validation**: Your editor will validate plugin syntax against the document schema",
                "",
                "6. **Mix formats freely**: You can use both JSON and YAML plugins in the same document as needed"
            ]
        }
    ],
    "resources": {
        "charts": {
            "barChart": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A simple bar chart showing example data",
                "data": {
                    "name": "exampleData"
                },
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "category",
                        "type": "nominal",
                        "title": "Category"
                    },
                    "y": {
                        "field": "value",
                        "type": "quantitative",
                        "title": "Value"
                    },
                    "color": {
                        "field": "category",
                        "type": "nominal",
                        "scale": {
                            "range": ["#3498db", "#e74c3c", "#f39c12", "#27ae60"]
                        },
                        "legend": null
                    }
                }
            }
        }
    }
}